import { nanoid } from 'nanoid';

export const tasks = {
  trigger: {
    name: 'Trigger',
    description: 'Block where workflow will start executing',
    icon: 'riFlashlightLine',
    component: 'BlockBasic',
    editComponent: 'EditTrigger',
    category: 'general',
    inputs: 0,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['url'],
    data: {
      disableBlock: false,
      description: '',
      type: 'manual',
      interval: 60,
      delay: 5,
      date: '',
      time: '00:00',
      url: '',
      shortcut: '',
      activeInInput: false,
      isUrlRegex: false,
      days: [],
      contextMenuName: '',
      contextTypes: [],
      observeElement: {
        selector: '',
        baseSelector: '',
        matchPattern: '',
        targetOptions: {
          subtree: false,
          childList: true,
          attributes: false,
          attributeFilter: [],
          characterData: false,
        },
        baseElOptions: {
          subtree: false,
          childList: true,
          attributes: false,
          attributeFilter: [],
          characterData: false,
        },
      },
    },
  },
  'execute-workflow': {
    name: 'Execute workflow',
    description: '',
    icon: 'riFlowChart',
    component: 'BlockBasic',
    category: 'general',
    editComponent: 'EditExecuteWorkflow',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['globalData'],
    data: {
      disableBlock: false,
      executeId: '',
      workflowId: '',
      globalData: '',
      description: '',
    },
  },
  'active-tab': {
    name: 'Active tab',
    description: "Set current tab that you're in as an active tab",
    icon: 'riWindowLine',
    component: 'BlockBasic',
    category: 'browser',
    disableEdit: true,
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
    },
  },
  'new-tab': {
    name: 'New tab',
    description: 'Create a new tab',
    icon: 'riGlobalLine',
    component: 'BlockBasic',
    editComponent: 'EditNewTab',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['url'],
    data: {
      disableBlock: false,
      description: '',
      url: '',
      userAgent: '',
      active: true,
      inGroup: false,
      waitTabLoaded: false,
      updatePrevTab: false,
      customUserAgent: false,
    },
  },
  'switch-tab': {
    name: 'Switch tab',
    description: 'Switch active tab',
    icon: 'riArrowLeftRightLine',
    component: 'BlockBasic',
    editComponent: 'EditSwitchTab',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['url', 'matchPattern'],
    data: {
      disableBlock: false,
      description: '',
      url: '',
      matchPattern: '',
      activeTab: true,
      createIfNoMatch: false,
    },
  },
  'new-window': {
    name: 'New window',
    description: 'Create a new window',
    icon: 'riWindow2Line',
    component: 'BlockBasic',
    editComponent: 'EditNewWindow',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      top: 0,
      left: 0,
      width: 0,
      height: 0,
      incognito: false,
      windowState: 'normal',
    },
  },
  proxy: {
    name: 'Proxy',
    description: 'Set the proxy of the browser',
    icon: 'riShieldKeyholeLine',
    component: 'BlockBasic',
    category: 'browser',
    editComponent: 'EditProxy',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    allowedInputs: true,
    refDataKeys: ['host', 'port', 'scheme'],
    data: {
      description: '',
      disableBlock: false,
      scheme: 'https',
      host: '',
      port: 443,
      bypassList: '',
      clearProxy: false,
    },
  },
  'go-back': {
    name: 'Go back',
    description: 'Go back to the previous page',
    icon: 'riArrowGoBackLine',
    component: 'BlockBasic',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    disableEdit: true,
    allowedInputs: true,
    data: {
      disableBlock: false,
    },
  },
  'forward-page': {
    name: 'Go forward',
    description: 'Go forward to the next page',
    icon: 'riArrowGoForwardLine',
    component: 'BlockBasic',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    disableEdit: true,
    allowedInputs: true,
    data: {
      disableBlock: false,
    },
  },
  'close-tab': {
    name: 'Close tab/window',
    icon: 'riCloseCircleLine',
    component: 'BlockBasic',
    category: 'browser',
    editComponent: 'EditCloseTab',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    allowedInputs: true,
    refDataKeys: ['url'],
    data: {
      disableBlock: false,
      url: '',
      description: '',
      activeTab: true,
      closeType: 'tab',
      allWindows: false,
    },
  },
  'take-screenshot': {
    name: 'Take screenshot',
    description: 'Take a screenshot of current active tab',
    icon: 'riImageLine',
    component: 'BlockBasic',
    category: 'browser',
    editComponent: 'EditTakeScreenshot',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    allowedInputs: true,
    refDataKeys: ['fileName'],
    autocomplete: ['variableName'],
    data: {
      description: '',
      disableBlock: false,
      fileName: '',
      ext: 'png',
      quality: 100,
      dataColumn: '',
      variableName: '',
      selector: '',
      fullPage: false,
      saveToColumn: false,
      saveToComputer: true,
      assignVariable: false,
      captureActiveTab: true,
    },
  },
  'browser-event': {
    name: 'Browser event',
    description: 'Wait until the selected event is triggered',
    icon: 'riLightbulbLine',
    component: 'BlockBasic',
    category: 'browser',
    editComponent: 'EditBrowserEvent',
    inputs: 1,
    outputs: 1,
    maxConnection: 1,
    allowedInputs: true,
    data: {
      disableBlock: false,
      description: '',
      timeout: 10000,
      eventName: 'tab:loaded',
      setAsActiveTab: true,
      activeTabLoaded: true,
      tabLoadedUrl: '',
      tabUrl: '',
      fileQuery: '',
    },
  },
  'event-click': {
    name: 'Click element',
    icon: 'riCursorLine',
    component: 'BlockBasic',
    editComponent: 'EditInteractionBase',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
    },
  },
  delay: {
    name: 'Delay',
    description: 'Add delay before executing the next block',
    icon: 'riTimerLine',
    component: 'BlockDelay',
    editComponent: 'EditDelay',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['time'],
    data: {
      disableBlock: false,
      time: 500,
    },
  },
  'get-text': {
    name: 'Get text',
    description: 'Get text from an element',
    icon: 'riParagraph',
    component: 'BlockBasic',
    editComponent: 'EditGetText',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'prefixText', 'suffixText', 'extraRowValue'],
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
      regex: '',
      prefixText: '',
      suffixText: '',
      regexExp: ['g'],
      dataColumn: '',
      saveData: true,
      includeTags: false,
      addExtraRow: false,
      assignVariable: false,
      variableName: '',
      extraRowValue: '',
      extraRowDataColumn: '',
    },
  },
  'export-data': {
    name: 'Export data',
    icon: 'riDownloadLine',
    component: 'BlockBasic',
    editComponent: 'EditExportData',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['name'],
    data: {
      disableBlock: false,
      name: '',
      refKey: '',
      type: 'json',
      description: '',
      variableName: '',
      csvDelimiter: ',',
      addBOMHeader: true,
      onConflict: 'uniquify',
      dataToExport: 'data-columns',
    },
  },
  'element-scroll': {
    name: 'Scroll element',
    icon: 'riMouseLine',
    component: 'BlockBasic',
    editComponent: 'EditScrollElement',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: 'html',
      markEl: false,
      multiple: false,
      scrollY: 0,
      scrollX: 0,
      incX: false,
      incY: false,
      smooth: false,
      scrollIntoView: false,
    },
  },
  link: {
    name: 'Link',
    description: 'Open link element',
    icon: 'riLink',
    component: 'BlockBasic',
    editComponent: 'EditInteractionBase',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      disableMultiple: true,
    },
  },
  'attribute-value': {
    name: 'Attribute value',
    description: 'Get attribute value of an element',
    icon: 'riBracketsLine',
    component: 'BlockBasic',
    editComponent: 'EditAttributeValue',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'attributeName', 'extraRowValue'],
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
      attributeName: '',
      assignVariable: false,
      variableName: '',
      dataColumn: '',
      saveData: true,
      addExtraRow: false,
      extraRowValue: '',
      extraRowDataColumn: '',
    },
  },
  forms: {
    name: 'Forms',
    icon: 'riInputCursorMove',
    description: 'Manipulate form(input, select, checkbox, and radio) element',
    component: 'BlockBasic',
    editComponent: 'EditForms',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'value'],
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
      selected: true,
      clearValue: true,
      getValue: false,
      saveData: false,
      dataColumn: '',
      assignVariable: false,
      variableName: '',
      type: 'text-field',
      value: '',
      delay: 0,
      events: [],
    },
  },
  'repeat-task': {
    name: 'Repeat task',
    icon: 'riRepeat2Line',
    component: 'BlockRepeatTask',
    category: 'general',
    inputs: 1,
    outputs: 2,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      repeatFor: 1,
    },
  },
  'javascript-code': {
    name: 'JavaScript code',
    description: 'Execute your custom javascript code in a webpage',
    icon: 'riCodeSSlashLine',
    component: 'BlockBasic',
    editComponent: 'EditJavascriptCode',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      timeout: 20000,
      code: 'console.log("Hello world!");\nautomaNextBlock()',
      preloadScripts: [],
      everyNewTab: false,
    },
  },
  'trigger-event': {
    name: 'Trigger event',
    description: 'Trigger event',
    icon: 'riLightbulbFlashLine',
    component: 'BlockBasic',
    editComponent: 'EditTriggerEvent',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'eventParams.clientX', 'eventParams.clientY'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: 'html',
      markEl: false,
      multiple: false,
      eventName: '',
      eventType: '',
      eventParams: { bubbles: true, cancelable: false },
    },
  },
  'google-sheets': {
    name: 'Google sheets',
    description: 'Read Google Sheets data',
    icon: 'mdiGoogleSheet',
    component: 'BlockBasic',
    editComponent: 'EditGoogleSheets',
    category: 'onlineServices',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['customData', 'range', 'spreadsheetId'],
    autocomplete: ['refKey'],
    data: {
      disableBlock: false,
      range: '',
      refKey: '',
      type: 'get',
      customData: '',
      description: '',
      spreadsheetId: '',
      dataColumn: '',
      saveData: true,
      assignVariable: false,
      variableName: '',
      firstRowAsKey: false,
      keysAsFirstRow: true,
      valueInputOption: 'RAW',
      InsertDataOption: 'INSERT_ROWS',
      dataFrom: 'data-columns',
    },
  },
  conditions: {
    name: 'Conditions',
    description: 'Conditional block',
    icon: 'riAB',
    component: 'BlockConditions',
    editComponent: 'EditConditions',
    category: 'conditions',
    inputs: 1,
    outputs: 0,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      conditions: [],
      retryConditions: false,
      retryCount: 10,
      retryTimeout: 1000,
    },
  },
  'element-exists': {
    name: 'Element exists',
    description: 'Check if an element is exists',
    icon: 'riFocus3Line',
    component: 'BlockElementExists',
    editComponent: 'EditElementExists',
    category: 'conditions',
    inputs: 1,
    outputs: 2,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      selector: '',
      tryCount: 1,
      timeout: 500,
      markEl: false,
      throwError: false,
    },
  },
  webhook: {
    name: 'HTTP Request',
    description: 'make an HTTP request',
    icon: 'riEarthLine',
    component: 'BlockBasicWithFallback',
    editComponent: 'EditWebhook',
    category: 'general',
    inputs: 1,
    outputs: 2,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['body', 'url'],
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      url: '',
      body: '{}',
      headers: [],
      method: 'POST',
      timeout: 10000,
      dataPath: '',
      contentType: 'json',
      variableName: '',
      assignVariable: false,
      saveData: false,
      dataColumn: '',
      responseType: 'json',
    },
  },
  'while-loop': {
    name: 'While loop',
    description: 'Execute blocks while the condition is met',
    icon: 'riRefreshFill',
    component: 'BlockBasicWithFallback',
    editComponent: 'EditWhileLoop',
    category: 'general',
    inputs: 1,
    outputs: 2,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      conditions: null,
    },
  },
  'loop-data': {
    name: 'Loop data',
    icon: 'riRefreshLine',
    component: 'BlockBasic',
    editComponent: 'EditLoopData',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: [
      'loopData',
      'variableName',
      'referenceKey',
      'elementSelector',
    ],
    autocomplete: ['variableName', 'loopId', 'maxLoop'],
    data: {
      disableBlock: false,
      loopId: '',
      maxLoop: 0,
      toNumber: 10,
      fromNumber: 1,
      startIndex: 0,
      loopData: '[]',
      description: '',
      variableName: '',
      referenceKey: '',
      elementSelector: '',
      resumeLastWorkflow: false,
      loopThrough: 'data-columns',
    },
  },
  'loop-breakpoint': {
    name: 'Loop breakpoint',
    description: 'To tell where loop data must stop',
    icon: 'riStopLine',
    component: 'BlockLoopBreakpoint',
    category: 'general',
    disableEdit: true,
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      loopId: '',
    },
  },
  'blocks-group': {
    name: 'Blocks group',
    description: 'Grouping blocks',
    icon: 'riFolderZipLine',
    component: 'BlockGroup',
    category: 'general',
    disableEdit: true,
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      name: '',
      blocks: [],
    },
  },
  clipboard: {
    name: 'Clipboard',
    description: 'Get the copied text from the clipboard',
    icon: 'riClipboardLine',
    component: 'BlockBasic',
    category: 'general',
    editComponent: 'EditClipboard',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      assignVariable: false,
      variableName: '',
      saveData: true,
      dataColumn: '',
    },
  },
  'insert-data': {
    name: 'Insert data',
    description: 'Insert data into table or variable',
    icon: 'riDatabase2Line',
    component: 'BlockBasic',
    category: 'general',
    editComponent: 'EditInsertData',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      dataList: [],
    },
  },
  'switch-to': {
    name: 'Switch frame',
    description: 'Switch between main window and iframe',
    icon: 'riArrowUpDownLine',
    component: 'BlockBasic',
    editComponent: 'EditSwitchTo',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      findBy: 'cssSelector',
      selector: '',
      windowType: 'main-window',
    },
  },
  'upload-file': {
    name: 'Upload file',
    description: 'Upload file into <input type="file"> element',
    icon: 'riFileUploadLine',
    component: 'BlockBasic',
    editComponent: 'EditUploadFile',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'filePaths'],
    data: {
      disableBlock: false,
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      filePaths: [],
    },
  },
  'hover-element': {
    name: 'Hover element',
    description: 'Hover over an element',
    icon: 'mdiCursorDefaultClickOutline',
    component: 'BlockBasic',
    editComponent: 'EditInteractionBase',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
    },
  },
  'save-assets': {
    name: 'Save assets',
    description:
      'Save assets (image, video, audio, or file) from an element or URL',
    icon: 'riImageLine',
    component: 'BlockBasic',
    editComponent: 'EditSaveAssets',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'url', 'filename'],
    data: {
      disableBlock: false,
      description: '',
      findBy: 'cssSelector',
      waitForSelector: false,
      waitSelectorTimeout: 5000,
      selector: '',
      markEl: false,
      multiple: false,
      type: 'element',
      url: '',
      filename: '',
      onConflict: 'uniquify',
    },
  },
  'press-key': {
    name: 'Press key',
    description: 'Press a key or a combination',
    icon: 'riKeyboardLine',
    component: 'BlockBasic',
    editComponent: 'EditPressKey',
    category: 'interaction',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['selector', 'keys'],
    data: {
      disableBlock: false,
      keys: '',
      selector: '',
      description: '',
    },
  },
  'handle-dialog': {
    name: 'Handle dialog',
    description:
      'Accepts or dismisses a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload).',
    icon: 'riChat3Line',
    component: 'BlockBasic',
    editComponent: 'EditHandleDialog',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['promptText'],
    data: {
      disableBlock: false,
      description: '',
      accept: true,
      promptText: '',
    },
  },
  'handle-download': {
    name: 'Handle download',
    description: 'Handle downloaded file',
    icon: 'riFileDownloadLine',
    component: 'BlockBasic',
    editComponent: 'EditHandleDownload',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['filename'],
    autocomplete: ['variableName'],
    data: {
      disableBlock: false,
      description: '',
      filename: '',
      timeout: 20000,
      onConflict: 'uniquify',
      waitForDownload: true,
      dataColumn: '',
      saveData: true,
      assignVariable: false,
      variableName: '',
    },
  },
  'reload-tab': {
    name: 'Reload tab',
    description: 'Reload the active tab',
    icon: 'riRestartLine',
    component: 'BlockBasic',
    category: 'browser',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    disableEdit: true,
    data: {
      disableBlock: false,
    },
  },
  'delete-data': {
    name: 'Delete data',
    description: 'Delete table or variable data',
    icon: 'riDeleteBin7Line',
    editComponent: 'EditDeleteData',
    component: 'BlockBasic',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      deleteList: [],
    },
  },
  'wait-connections': {
    name: 'Wait connections',
    description: 'Wait for all connections before continuing to the next block',
    icon: 'riTimerFlashLine',
    editComponent: 'EditWaitConnections',
    component: 'BlockBasic',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    data: {
      disableBlock: false,
      description: '',
      timeout: 10000,
      specificFlow: false,
      flowBlockId: '',
    },
  },
  notification: {
    name: 'Notification',
    description: 'Display a notification',
    icon: 'riNotification3Line',
    editComponent: 'EditNotification',
    component: 'BlockBasic',
    category: 'general',
    inputs: 1,
    outputs: 1,
    allowedInputs: true,
    maxConnection: 1,
    refDataKeys: ['message', 'title', 'iconUrl', 'imageUrl'],
    data: {
      disableBlock: false,
      description: '',
      message: '',
      iconUrl: '',
      imageUrl: '',
      title: 'Hello world!',
    },
  },
};

export const categories = {
  interaction: {
    name: 'Web interaction',
    border: 'border-green-200 dark:border-green-300',
    color: 'bg-green-200 dark:bg-green-300 fill-green-200 dark:fill-green-300',
  },
  browser: {
    name: 'Browser',
    border: 'border-orange-200 dark:border-orange-300',
    color:
      'bg-orange-200 dark:bg-orange-300 fill-orange-200 dark:fill-orange-300',
  },
  general: {
    name: 'General',
    border: 'border-yellow-200 dark:border-yellow-300',
    color:
      'bg-yellow-200 dark:bg-yellow-300 fill-yellow-200 dark:fill-yellow-300',
  },
  onlineServices: {
    name: 'Online services',
    border: 'border-red-200 dark:border-red-300',
    color: 'bg-red-200 dark:bg-red-300 fill-red-200 dark:fill-red-300',
  },
  conditions: {
    name: 'Conditions',
    border: 'border-blue-200 dark:border-blue-300',
    color: 'bg-blue-200 dark:bg-blue-300 fill-blue-200 dark:fill-blue-300',
  },
};

export const eventList = [
  { id: 'click', name: 'Click', type: 'mouse-event' },
  { id: 'dblclick', name: 'Double Click', type: 'mouse-event' },
  { id: 'mouseup', name: 'Mouseup', type: 'mouse-event' },
  { id: 'mousedown', name: 'Mousedown', type: 'mouse-event' },
  { id: 'mouseenter', name: 'Mouseenter', type: 'mouse-event' },
  { id: 'mouseleave', name: 'Mouseleave', type: 'mouse-event' },
  { id: 'mouseover', name: 'Mouseover', type: 'mouse-event' },
  { id: 'mouseout', name: 'Mouseout', type: 'mouse-event' },
  { id: 'mousemove', name: 'Mousemove', type: 'mouse-event' },
  { id: 'focus', name: 'Focus', type: 'focus-event' },
  { id: 'blur', name: 'Blur', type: 'focus-event' },
  { id: 'input', name: 'Input', type: 'input-event' },
  { id: 'change', name: 'Change', type: 'event' },
  { id: 'touchstart', name: 'Touch start', type: 'touch-event' },
  { id: 'touchend', name: 'Touch end', type: 'touch-event' },
  { id: 'touchmove', name: 'Touch move', type: 'touch-event' },
  { id: 'touchcancel', name: 'Touch cancel', type: 'touch-event' },
  { id: 'keydown', name: 'Keydown', type: 'keyboard-event' },
  { id: 'keyup', name: 'Keyup', type: 'keyboard-event' },
  { id: 'submit', name: 'Submit', type: 'submit-event' },
  { id: 'wheel', name: 'Wheel', type: 'wheel-event' },
];

export const dataExportTypes = [
  { name: 'JSON', id: 'json' },
  { name: 'CSV', id: 'csv' },
  { name: 'Plain text', id: 'plain-text' },
];

export const firstWorkflows = [
  {
    id: nanoid(),
    name: 'Google search',
    createdAt: Date.now(),
    drawflow: {
      nodes: [
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: 'd634ff22-5dfe-44dc-83d2-842412bd9fbf-output-1',
                position: 'right',
                x: 196.00000657196182,
                y: 28.000021560199762,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 50, y: 300, z: 0 },
          id: 'd634ff22-5dfe-44dc-83d2-842412bd9fbf',
          label: 'trigger',
          position: { x: 50, y: 300 },
          data: { type: 'manual', interval: 10 },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: 'b9e7e0d4-e86a-4635-a352-31c63723fef4-output-1',
                position: 'right',
                x: 196.00006103515628,
                y: 27.999992370605472,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: 'b9e7e0d4-e86a-4635-a352-31c63723fef4-input-1',
                position: 'left',
                x: -20,
                y: 27.999992370605472,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 353, y: 298, z: 0 },
          id: 'b9e7e0d4-e86a-4635-a352-31c63723fef4',
          label: 'new-tab',
          position: { x: 353, y: 298 },
          data: {
            disableBlock: false,
            description: '',
            url: 'https://google.com',
            userAgent: '',
            active: true,
            inGroup: false,
            waitTabLoaded: false,
            updatePrevTab: false,
            customUserAgent: false,
            onError: {
              0: 's',
              1: 't',
              2: 'a',
              3: 't',
              4: 'e',
              5: '.',
              6: 'o',
              7: 'n',
              8: 'E',
              9: 'r',
              10: 'r',
              11: 'o',
              12: 'r',
            },
          },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '09f3a14c-0514-4287-93b0-aa92b0064fba-output-1',
                position: 'right',
                x: 195.99997405489208,
                y: 28.00001941411291,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '09f3a14c-0514-4287-93b0-aa92b0064fba-input-1',
                position: 'left',
                x: -20.000021574075806,
                y: 28.00001941411291,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 641, y: 290, z: 0 },
          id: '09f3a14c-0514-4287-93b0-aa92b0064fba',
          label: 'forms',
          position: { x: 641, y: 290 },
          data: {
            description: 'Type query',
            selector: "[name='q']",
            markEl: false,
            multiple: false,
            selected: true,
            type: 'text-field',
            value: 'Automa Extension',
            delay: '120',
            events: [],
          },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '5f76370d-aa3d-4258-8319-230fcfc49a3a-output-1',
                position: 'right',
                x: 196.00006103515628,
                y: 27.999992370605472,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '5f76370d-aa3d-4258-8319-230fcfc49a3a-input-1',
                position: 'left',
                x: -20,
                y: 27.999992370605472,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 929, y: 293, z: 0 },
          id: '5f76370d-aa3d-4258-8319-230fcfc49a3a',
          label: 'event-click',
          position: { x: 929, y: 293 },
          data: {
            description: 'Click search',
            selector: 'center:nth-child(1) > .gNO89b',
            markEl: false,
            multiple: false,
          },
          selected: false,
        },
      ],
      edges: [
        {
          id: 'edge-0',
          sourceHandle: 'd634ff22-5dfe-44dc-83d2-842412bd9fbf-output-1',
          targetHandle: 'b9e7e0d4-e86a-4635-a352-31c63723fef4-input-1',
          source: 'd634ff22-5dfe-44dc-83d2-842412bd9fbf',
          target: 'b9e7e0d4-e86a-4635-a352-31c63723fef4',
          class:
            'source-d634ff22-5dfe-44dc-83d2-842412bd9fbf-output-1 target-b9e7e0d4-e86a-4635-a352-31c63723fef4-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-1',
          sourceHandle: 'b9e7e0d4-e86a-4635-a352-31c63723fef4-output-1',
          targetHandle: '09f3a14c-0514-4287-93b0-aa92b0064fba-input-1',
          source: 'b9e7e0d4-e86a-4635-a352-31c63723fef4',
          target: '09f3a14c-0514-4287-93b0-aa92b0064fba',
          class:
            'source-b9e7e0d4-e86a-4635-a352-31c63723fef4-output-1 target-09f3a14c-0514-4287-93b0-aa92b0064fba-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
          animated: true,
        },
        {
          id: 'edge-2',
          sourceHandle: '09f3a14c-0514-4287-93b0-aa92b0064fba-output-1',
          targetHandle: '5f76370d-aa3d-4258-8319-230fcfc49a3a-input-1',
          source: '09f3a14c-0514-4287-93b0-aa92b0064fba',
          target: '5f76370d-aa3d-4258-8319-230fcfc49a3a',
          class:
            'source-09f3a14c-0514-4287-93b0-aa92b0064fba-output-1 target-5f76370d-aa3d-4258-8319-230fcfc49a3a-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
      ],
      position: [-1.538468549623417, 35.22407674532957],
      zoom: 0.7999999999999999,
    },
  },
  {
    id: nanoid(),
    name: 'Generate lorem ipsum',
    createdAt: Date.now(),
    drawflow: {
      nodes: [
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: 'c5774692-0be4-457f-82be-d5e4b3344ad7-output-1',
                position: 'right',
                x: 195.99998474121094,
                y: 27.99999237060547,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 50, y: 300, z: 0 },
          id: 'c5774692-0be4-457f-82be-d5e4b3344ad7',
          label: 'trigger',
          position: { x: 50, y: 300 },
          data: {
            disableBlock: false,
            description: '',
            type: 'manual',
            interval: 60,
            delay: 5,
            date: '',
            time: '00:00',
            url: '',
            shortcut: '',
            activeInInput: false,
            isUrlRegex: false,
            days: [],
          },
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '10a0429e-b8c4-4c04-9ea3-df169cea78e4-output-1',
                position: 'right',
                x: 195.9999744943092,
                y: 28.000021560199755,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '10a0429e-b8c4-4c04-9ea3-df169cea78e4-input-1',
                position: 'left',
                x: -19.999903128358724,
                y: 28.000021560199755,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 315, y: 297, z: 0 },
          id: '10a0429e-b8c4-4c04-9ea3-df169cea78e4',
          label: 'new-tab',
          position: { x: 315, y: 297 },
          data: {
            disableBlock: false,
            description: '',
            url: 'http://lipsum.com',
            userAgent: '',
            active: true,
            inGroup: false,
            waitTabLoaded: false,
            updatePrevTab: true,
            customUserAgent: false,
          },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '24bdec44-1e80-4cee-9139-00545b8d33d9-output-1',
                position: 'right',
                x: 195.99997198037403,
                y: 28.000015439189703,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '24bdec44-1e80-4cee-9139-00545b8d33d9-input-1',
                position: 'left',
                x: -20.000004547328174,
                y: 28.000015439189703,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 596, y: 302, z: 0 },
          id: '24bdec44-1e80-4cee-9139-00545b8d33d9',
          label: 'element-scroll',
          position: { x: 596, y: 302 },
          data: {
            disableBlock: false,
            description: '',
            findBy: 'cssSelector',
            waitForSelector: true,
            waitSelectorTimeout: 5000,
            selector: '#amount',
            markEl: false,
            multiple: false,
            scrollY: 0,
            scrollX: 0,
            incX: false,
            incY: false,
            smooth: true,
            scrollIntoView: true,
          },
          selected: false,
        },
        {
          type: 'BlockDelay',
          dimensions: { width: 192, height: 117 },
          handleBounds: {
            source: [
              {
                id: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae-output-1',
                position: 'right',
                x: 196.00015343897923,
                y: 50.687512658751125,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae-input-1',
                position: 'left',
                x: -19.999913818025576,
                y: 50.687512658751125,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 878, y: 282, z: 0 },
          id: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae',
          label: 'delay',
          position: { x: 878, y: 282 },
          data: { time: '1000' },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '2d93c1de-42ca-4f39-8e61-e3e55529fbba-output-1',
                position: 'right',
                x: 195.99997198037403,
                y: 28.000015439189703,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '2d93c1de-42ca-4f39-8e61-e3e55529fbba-input-1',
                position: 'left',
                x: -20.000004547328174,
                y: 28.000015439189703,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 1148, y: 297, z: 0 },
          id: '2d93c1de-42ca-4f39-8e61-e3e55529fbba',
          label: 'forms',
          position: { x: 1148, y: 297 },
          data: {
            disableBlock: false,
            description: 'Lipsum length',
            findBy: 'cssSelector',
            waitForSelector: false,
            waitSelectorTimeout: 5000,
            selector: '#amount',
            markEl: false,
            multiple: false,
            selected: true,
            clearValue: true,
            getValue: false,
            saveData: false,
            dataColumn: '',
            assignVariable: false,
            variableName: '',
            type: 'text-field',
            value: '3',
            delay: 0,
            events: [],
          },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-output-1',
                position: 'right',
                x: 195.99997198037403,
                y: 27.999992756864053,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-input-1',
                position: 'left',
                x: -20.00009527663077,
                y: 27.999992756864053,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 1414, y: 299, z: 0 },
          id: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb',
          label: 'event-click',
          position: { x: 1414, y: 299 },
          data: {
            disableBlock: false,
            description: 'Generate button',
            findBy: 'cssSelector',
            waitForSelector: false,
            waitSelectorTimeout: 5000,
            selector: '#generate',
            markEl: false,
            multiple: false,
          },
          selected: false,
        },
        {
          type: 'BlockDelay',
          dimensions: { width: 192, height: 117 },
          handleBounds: {
            source: [
              {
                id: 'fb9be12f-8995-4876-8bfe-79323769474b-output-1',
                position: 'right',
                x: 195,
                y: 50.68748474121094,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: 'fb9be12f-8995-4876-8bfe-79323769474b-input-1',
                position: 'left',
                x: -20,
                y: 50.68748474121094,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 1686, y: 280, z: 0 },
          id: 'fb9be12f-8995-4876-8bfe-79323769474b',
          label: 'delay',
          position: { x: 1686, y: 280 },
          data: { disableBlock: false, time: 2000 },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '7205fcf2-deda-445e-9690-4e36adb52585-output-1',
                position: 'right',
                x: 195.99997449430924,
                y: 28.00000552137348,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '7205fcf2-deda-445e-9690-4e36adb52585-input-1',
                position: 'left',
                x: -20.000031438968968,
                y: 28.00000552137348,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 1973, y: 307, z: 0 },
          id: '7205fcf2-deda-445e-9690-4e36adb52585',
          label: 'get-text',
          position: { x: 1973, y: 307 },
          data: {
            disableBlock: false,
            description: 'Get text result',
            findBy: 'cssSelector',
            waitForSelector: false,
            waitSelectorTimeout: 5000,
            selector: '#lipsum',
            markEl: false,
            multiple: false,
            regex: '',
            prefixText: '',
            suffixText: '',
            regexExp: ['g', 'g'],
            dataColumn: '',
            saveData: true,
            includeTags: false,
            addExtraRow: false,
            assignVariable: false,
            variableName: '',
            extraRowValue: '',
            extraRowDataColumn: '',
          },
          selected: false,
        },
        {
          type: 'BlockRepeatTask',
          dimensions: { width: 193, height: 149 },
          handleBounds: {
            source: [
              {
                id: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-1',
                position: 'right',
                x: 197.2124006448874,
                y: 66.6874815732158,
                width: 16,
                height: 16,
              },
              {
                id: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-2',
                position: 'right',
                x: 197.2124006448874,
                y: 113.3875114484557,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-input-1',
                position: 'left',
                x: -20.000129470007995,
                y: 66.6874815732158,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 2253, y: 263.5, z: 0 },
          id: '3d3e8fac-97fa-4c3d-84bc-a3db18740184',
          label: 'repeat-task',
          position: { x: 2253, y: 263.5 },
          data: { disableBlock: false, repeatFor: 2 },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 72 },
          handleBounds: {
            source: [
              {
                id: '4d39ecd5-f33f-4e57-b11d-2f26b1076334-output-1',
                position: 'right',
                x: 195.9998661589599,
                y: 27.999992440129862,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '4d39ecd5-f33f-4e57-b11d-2f26b1076334-input-1',
                position: 'left',
                x: -20.00023736594018,
                y: 27.999992440129862,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 2529.75, y: 304, z: 0 },
          id: '4d39ecd5-f33f-4e57-b11d-2f26b1076334',
          label: 'export-data',
          position: { x: 2529.75, y: 304 },
          data: {
            disableBlock: false,
            name: 'Lipsum',
            refKey: '',
            type: 'plain-text',
            description: '',
            variableName: '',
            addBOMHeader: false,
            onConflict: 'uniquify',
            dataToExport: 'data-columns',
          },
          selected: false,
        },
        {
          type: 'BlockBasic',
          dimensions: { width: 192, height: 96 },
          handleBounds: {
            source: [
              {
                id: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-1',
                position: 'right',
                x: 196.00006103515625,
                y: 40.000038146972656,
                width: 16,
                height: 16,
              },
              {
                id: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-fallback',
                position: 'right',
                x: 196.00006103515625,
                y: 62.00000762939453,
                width: 16,
                height: 16,
              },
            ],
            target: [
              {
                id: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-input-1',
                position: 'left',
                x: -20,
                y: 40.000038146972656,
                width: 16,
                height: 16,
              },
            ],
          },
          computedPosition: { x: 1135.5, y: 628, z: 0 },
          id: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c',
          label: 'go-back',
          position: { x: 1135.5, y: 628 },
          data: {
            disableBlock: false,
            onError: {
              retry: false,
              enable: true,
              retryTimes: 1,
              retryInterval: 2,
              toDo: 'fallback',
            },
          },
        },
      ],
      edges: [
        {
          id: 'edge-0',
          sourceHandle: 'c5774692-0be4-457f-82be-d5e4b3344ad7-output-1',
          targetHandle: '10a0429e-b8c4-4c04-9ea3-df169cea78e4-input-1',
          source: 'c5774692-0be4-457f-82be-d5e4b3344ad7',
          target: '10a0429e-b8c4-4c04-9ea3-df169cea78e4',
          class:
            'source-c5774692-0be4-457f-82be-d5e4b3344ad7-output-1 target-10a0429e-b8c4-4c04-9ea3-df169cea78e4-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-1',
          sourceHandle: '10a0429e-b8c4-4c04-9ea3-df169cea78e4-output-1',
          targetHandle: '24bdec44-1e80-4cee-9139-00545b8d33d9-input-1',
          source: '10a0429e-b8c4-4c04-9ea3-df169cea78e4',
          target: '24bdec44-1e80-4cee-9139-00545b8d33d9',
          class:
            'source-10a0429e-b8c4-4c04-9ea3-df169cea78e4-output-1 target-24bdec44-1e80-4cee-9139-00545b8d33d9-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-2',
          sourceHandle: '24bdec44-1e80-4cee-9139-00545b8d33d9-output-1',
          targetHandle: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae-input-1',
          source: '24bdec44-1e80-4cee-9139-00545b8d33d9',
          target: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae',
          class:
            'source-24bdec44-1e80-4cee-9139-00545b8d33d9-output-1 target-df24edcc-4c29-49f5-8a29-0e572a4bc6ae-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-3',
          sourceHandle: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae-output-1',
          targetHandle: '2d93c1de-42ca-4f39-8e61-e3e55529fbba-input-1',
          source: 'df24edcc-4c29-49f5-8a29-0e572a4bc6ae',
          target: '2d93c1de-42ca-4f39-8e61-e3e55529fbba',
          class:
            'source-df24edcc-4c29-49f5-8a29-0e572a4bc6ae-output-1 target-2d93c1de-42ca-4f39-8e61-e3e55529fbba-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-4',
          sourceHandle: '2d93c1de-42ca-4f39-8e61-e3e55529fbba-output-1',
          targetHandle: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-input-1',
          source: '2d93c1de-42ca-4f39-8e61-e3e55529fbba',
          target: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb',
          class:
            'source-2d93c1de-42ca-4f39-8e61-e3e55529fbba-output-1 target-0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-5',
          sourceHandle: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-output-1',
          targetHandle: 'fb9be12f-8995-4876-8bfe-79323769474b-input-1',
          source: '0f3e2baa-8d6d-4323-8ac7-362f1be39ecb',
          target: 'fb9be12f-8995-4876-8bfe-79323769474b',
          class:
            'source-0f3e2baa-8d6d-4323-8ac7-362f1be39ecb-output-1 target-fb9be12f-8995-4876-8bfe-79323769474b-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-6',
          sourceHandle: 'fb9be12f-8995-4876-8bfe-79323769474b-output-1',
          targetHandle: '7205fcf2-deda-445e-9690-4e36adb52585-input-1',
          source: 'fb9be12f-8995-4876-8bfe-79323769474b',
          target: '7205fcf2-deda-445e-9690-4e36adb52585',
          class:
            'source-fb9be12f-8995-4876-8bfe-79323769474b-output-1 target-7205fcf2-deda-445e-9690-4e36adb52585-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-7',
          sourceHandle: '7205fcf2-deda-445e-9690-4e36adb52585-output-1',
          targetHandle: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-input-1',
          source: '7205fcf2-deda-445e-9690-4e36adb52585',
          target: '3d3e8fac-97fa-4c3d-84bc-a3db18740184',
          class:
            'source-7205fcf2-deda-445e-9690-4e36adb52585-output-1 target-3d3e8fac-97fa-4c3d-84bc-a3db18740184-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-8',
          sourceHandle: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-1',
          targetHandle: '4d39ecd5-f33f-4e57-b11d-2f26b1076334-input-1',
          source: '3d3e8fac-97fa-4c3d-84bc-a3db18740184',
          target: '4d39ecd5-f33f-4e57-b11d-2f26b1076334',
          class:
            'source-3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-1 target-4d39ecd5-f33f-4e57-b11d-2f26b1076334-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-9',
          sourceHandle: '3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-2',
          targetHandle: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-input-1',
          source: '3d3e8fac-97fa-4c3d-84bc-a3db18740184',
          target: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c',
          class:
            'source-3d3e8fac-97fa-4c3d-84bc-a3db18740184-output-2 target-2f5fec61-a318-4e2b-b7d3-bc7328bd282c-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-10',
          sourceHandle: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-1',
          targetHandle: '24bdec44-1e80-4cee-9139-00545b8d33d9-input-1',
          source: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c',
          target: '24bdec44-1e80-4cee-9139-00545b8d33d9',
          class:
            'source-2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-1 target-24bdec44-1e80-4cee-9139-00545b8d33d9-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
        {
          id: 'edge-11',
          sourceHandle: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-fallback',
          targetHandle: '10a0429e-b8c4-4c04-9ea3-df169cea78e4-input-1',
          source: '2f5fec61-a318-4e2b-b7d3-bc7328bd282c',
          target: '10a0429e-b8c4-4c04-9ea3-df169cea78e4',
          class:
            'source-2f5fec61-a318-4e2b-b7d3-bc7328bd282c-output-fallback target-10a0429e-b8c4-4c04-9ea3-df169cea78e4-input-1',
          type: 'default',
          z: 0,
          sourceX: 0,
          sourceY: 0,
          targetX: 0,
          targetY: 0,
          markerEnd: 'arrowclosed',
        },
      ],
      position: [29, 97],
      zoom: 0.5,
    },
  },
];

export const workflowCategories = {
  scrape: 'Scraping',
  automation: 'Automation',
  productivity: 'Productivity',
};

export const excludeOnError = [
  'delay',
  'webhook',
  'trigger',
  'while-loop',
  'conditions',
  'element-exists',
];

export const contentTypes = [
  { name: 'application/json', value: 'json' },
  { name: 'application/x-www-form-urlencoded', value: 'form' },
];

export const supportLocales = [
  { id: 'en', name: 'English' },
  { id: 'zh', name: '简体中文' },
  { id: 'zh-tw', name: '繁體中文' },
  { id: 'vi', name: 'Tiếng Việt' },
  { id: 'fr', name: 'Français' },
];

export const communities = [
  {
    name: 'GitHub',
    icon: 'riGithubFill',
    url: 'https://github.com/kholid060/automa',
  },
  {
    name: 'Twitter',
    icon: 'riTwitterLine',
    url: 'https://twitter.com/AutomaApp',
  },
  {
    name: 'Discord',
    icon: 'riDiscordLine',
    url: 'https://discord.gg/C6khwwTE84',
  },
  {
    name: 'YouTube',
    icon: 'riYoutubeLine',
    url: 'https://www.youtube.com/channel/UCL3qU64hW0fsIj2vOayOQUQ',
  },
];

export const elementsHighlightData = {
  selectedElements: {
    stroke: '#2563EB',
    activeStroke: '#f87171',
    fill: 'rgba(37, 99, 235, 0.1)',
    activeFill: 'rgba(248, 113, 113, 0.1)',
  },
  hoveredElements: {
    stroke: '#fbbf24',
    fill: 'rgba(251, 191, 36, 0.1)',
  },
};

export const conditionBuilder = {
  valueTypes: [
    {
      id: 'value',
      category: 'value',
      name: 'Value',
      compareable: true,
      data: { value: '' },
    },
    {
      id: 'code',
      category: 'value',
      name: 'Code',
      compareable: false,
      data: { code: '\nreturn true;' },
    },
    {
      id: 'element#text',
      category: 'element',
      name: 'Element text',
      compareable: true,
      data: { selector: '' },
    },
    {
      id: 'element#exists',
      category: 'element',
      name: 'Element exists',
      compareable: false,
      data: { selector: '' },
    },
    {
      id: 'element#notExists',
      category: 'element',
      name: 'Element not exists',
      compareable: false,
      data: { selector: '' },
    },
    {
      id: 'element#visible',
      category: 'element',
      name: 'Element visible',
      compareable: false,
      data: { selector: '' },
    },
    {
      id: 'element#visibleScreen',
      category: 'element',
      name: 'Element visible in screen',
      compareable: false,
      data: { selector: '' },
    },
    {
      id: 'element#invisible',
      category: 'element',
      name: 'Element hidden in screen',
      compareable: false,
      data: { selector: '' },
    },
    {
      id: 'element#attribute',
      category: 'element',
      name: 'Element attribute value',
      compareable: true,
      data: { selector: '', attrName: '' },
    },
  ],
  compareTypes: [
    { id: 'eq', name: 'Equals', needValue: true, category: 'basic' },
    {
      id: 'eqi',
      name: 'Equals (case insensitive)',
      needValue: true,
      category: 'basic',
    },
    { id: 'nq', name: 'Not equals', needValue: true, category: 'basic' },
    { id: 'gt', name: 'Greater than', needValue: true, category: 'number' },
    {
      id: 'gte',
      name: 'Greater than or equal',
      needValue: true,
      category: 'number',
    },
    { id: 'lt', name: 'Less than', needValue: true, category: 'number' },
    {
      id: 'lte',
      name: 'Less than or equal',
      needValue: true,
      category: 'number',
    },
    { id: 'cnt', name: 'Contains', needValue: true, category: 'text' },
    { id: 'nct', name: 'Not contains', needValue: true, category: 'text' },
    { id: 'stw', name: 'Starts with', needValue: true, category: 'text' },
    { id: 'enw', name: 'Ends with', needValue: true, category: 'text' },
    { id: 'rgx', name: 'Match with RegEx', needValue: true, category: 'text' },
    { id: 'itr', name: 'Is truthy', needValue: false, category: 'boolean' },
    { id: 'ifl', name: 'Is falsy', needValue: false, category: 'boolean' },
  ],
  inputTypes: {
    selector: {
      placeholder: '.class',
      label: 'CSS selector or XPath',
    },
    value: {
      label: 'Value',
      placeholder: 'abc123',
    },
    attrName: {
      label: 'Attribute name',
      placeholder: 'name',
    },
  },
};
